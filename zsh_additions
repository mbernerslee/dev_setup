function git_branch() {
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}

function parse_git_dirty() {
  [[ -n "$(git status -s 2> /dev/null)" ]] && echo "*"
}

function git_prune_branches() {
  git branch | grep -v \* | xargs git branch -D
}

# find and replace on macOS
# find test \( -name "*.exs" -o -name "*.ex" \) -exec sed -i '' "s/DataCase/Support.DataCase/g" {} +

function kill_mix_test {
  mix_test_pids=$(ps aux | grep -v "grep" | grep "mix test" | awk '{print $2}')

  if [[ "$mix_test_pids" -eq "" ]]; then
    echo "mix test is not running"
  else
    while IFS= read -r mix_test_pid
      do
        echo "killing mix test pid $mix_test_pid"
        kill -9 $mix_test_pid
    done <<< "$mix_test_pids"
  fi
}

autoload -Uz compinit && compinit

PROMPT='%F{51}%n%f%F{51}@%m%f:%F{33}%~%f%F{201}$(git_branch)$(parse_git_dirty)%f %1 \$ '
#find and replace across multiple files
#find . -type f -name '*.ex' -exec sed -i '' 's/@behaviour Platform.Seeds.ModuleBehaviour/@behaviour Platform.Seeds.Inserter/g' {} +
alias vim=nvim
#eval "$(starship init zsh)"
eval "$(zoxide init zsh)"
export FZF_DEFAULT_COMMAND='rg --files'
