#!/bin/bash
# Runs on an apple silicon arm machine. Probably won't on proper linux.

# https://www.howtogeek.com/410442/how-to-display-the-date-and-time-in-the-linux-terminal-and-use-it-in-bash-scripts/
function pretty_datetime() {
  date +"%a %d/%m/%y %H:%M"
}

function next_meeting_warning_message() {
  minutes_until_meeting="$1"
  meeting_title="$2"
  meeting_location="$3"
  meeting_description="$4"

  hours=$(($minutes_until_meeting / 60))
  minutes=$(($minutes_until_meeting % 60))

  mkdir -p /tmp/calendar_status_right
  touch /tmp/calendar_status_right/last_popup_time
  last_popup_time=$(cat /tmp/calendar_status_right/last_popup_time)
  now=$(date +%s)
  seconds_since_last_popup=$(( $now - $last_popup_time ))

  if [[ $seconds_since_last_popup -gt 60 ]] && [[ $minutes_until_meeting -lt 2 ]]; then
    # https://willhbr.net/2023/02/07/dismissable-popup-shell-in-tmux/
    popup_command="echo \"Meeting in \"$minutes_until_meeting\" min(s)\\n\"; echo \"Title: $meeting_title\"; echo \"Location: $meeting_location\"; echo \"Description: $meeting_description\\n\""

    date +%s > /tmp/calendar_status_right/last_popup_time

    tmux display-popup -E "$popup_command; echo 'Press Ctrl C to kill this popup...'; sleep 100"

    echo "$minutes mins | $meeting_title"
  elif [[ $minutes_until_meeting -eq 60 ]]; then
    echo "1 hr | $meeting_title"
  elif [[ $minutes_until_meeting -lt 60 ]]; then
    echo "$minutes min | $meeting_title"
  elif [[ $minutes_until_meeting -lt 120 ]]; then
    echo "1 hr $minutes mins | $meeting_title"
  else
    echo "$hours hrs $minutes min | $meeting_title"
  fi
}


function next_meeting() {
  next_event=$(gcalcli agenda --nostarted --nodeclined --nocolor --tsv --details=title --details=location --details=description | head -2 | tail -1)

  # 2024-11-05 09:05 2024-11-05 09:20 MTG Tuesday Standup
  #next_event="2024-11-05 09:05 2024-11-05 09:20 MTG Tuesday Standup"

  today=$(date +"%Y-%m-%d")
  meeting_start_day=$(echo "$next_event" | cut -f1)
  meeting_start_time=$(echo "$next_event" | cut -f2)
  meeting_end_time=$(echo "$next_event" | cut -f4)
  meeting_title=$(echo "$next_event" | cut -f5)
  meeting_location=$(echo "$next_event" | cut -f6)
  meeting_description=$(echo "$next_event" | cut -f7)

  if [[ "$meeting_start_day" == "$today" ]]; then
    meeting_start_time=$(echo $next_event | awk '{print $2}')

    meeting_start_hour=$(echo $meeting_start_time | awk -F':' '{print $1}' | sed 's/^0//')
    meeting_start_minute=$(echo $meeting_start_time | awk -F':' '{print $2}' | sed 's/^0//')

    current_hour=$(date +"%-H")
    current_minute=$(date +"%-M")

    current_mins_since_day_start=$((current_hour * 60 + $current_minute))
    meeting_start_mins_since_day_start=$((meeting_start_hour * 60 + $meeting_start_minute))

    minutes_until_meeting=$(($meeting_start_mins_since_day_start - $current_mins_since_day_start))

    warning_msg=$(next_meeting_warning_message "$minutes_until_meeting" "$meeting_title" "$meeting_location" "$meeting_description")
    echo "$warning_msg | $(pretty_datetime)"
  else
    echo "No more meetings today | $(pretty_datetime)"
  fi
}

next_meeting
