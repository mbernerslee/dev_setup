alias c='tput reset'

grepex() {
  grep -r "$1" . --include="*.ex" --include="*.exs" --include="*.html.eex" --include="*.html.leex"
}
replaceex() {
  find \( -name "*.ex" -o -name "*.exs" -o -name "*.eex" -o -name "*.leex" \) -exec sed -i "s/$1/$2/g" {} +
}
replacelm() {
  find \( -name "*.elm" \) -exec sed -i "s/$1/$2/g" {} +
}
rmswap() {
  find . -name "*.swp" -exec rm {} \;
}
killslack() {
  for pid in $(ps -ef | grep "slack" | awk '{print $2}'); do kill -9 $pid; done
}
whitehat_wifi() {
  sudo cat /etc/NetworkManager/system-connections/WhiteHat | grep psk=
}
constant_testing() {
  ~/src/constant_testing/constant_testing $@
}
function git_prune_branches() {
  branches=$(git branch | grep -v \*)

  if [[ "$branches" == "" ]]; then
    echo "No branches to prune"
  else
    git branch -D $branches
  fi
}
function diffhead() {
  if [[ "$1" == "" ]]; then
    git diff HEAD | nvim -
  else
    git diff HEAD -S"$1" | grep -e "\+.*$1" -e '^\+\{3\}'
  fi
}
function diffmaster() {
  master_branch_name=$(master_branch)
  if [[ $? -eq 0 ]]; then
    if [[ "$1" == "" ]]; then
      git diff $master_branch_name | nvim -
    else
      git diff "$master_branch_name" -S"$1" | grep -e "\+.*$1" -e '^\+\{3\}'
    fi
  fi
}
function master_branch() {
  branches=$(git branch 2>&1)
  if [[ $? -eq 0 ]]; then
    echo "$branches" | grep -e "^  master$" -e "^\* master$" > /dev/null
    if [[ $? -eq 0 ]]; then
      echo "master"
      return 0
    fi

    echo "$branches" | grep -e "^  main$" -e "^\* main$" > /dev/null
    if [[ $? -eq 0 ]]; then
      echo "main"
      return 0
    fi
  fi

  echo "Could not find master branch :-(. Maybe you're not in a git repo?" >&2
  return 1
}

ln -sf ~/src/dev_setup/.tmux.conf ~/.tmux.conf
ln -sf ~/src/dev_setup/.vimrc ~/.vimrc
export ERL_AFLAGS="-kernel shell_history enabled"
export PATH=~/.rbenv/bin:$PATH
#export PATH=~/src/platform/assets/node_modules/.bin:$PATH
alias p='python3';
export GOROOT=/usr/local/go
export PATH=$GOPATH/bin:$GOROOT/bin:$PATH
#export APP_HOST=beastyboi
alias vim=nvim
eval "$(zoxide init bash)"
